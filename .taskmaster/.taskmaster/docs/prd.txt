# yudao-cloud SubAgent 产品需求文档 (PRD)

## 项目概述
基于yudao-cloud开源框架开发Claude Code SubAgent定制化系统，实现智能代码分析、AST解析和代码优化建议功能。

## 核心功能需求

### 1. AST代码分析引擎
- 基于JavaParser 3.25.6实现Java代码AST解析
- 支持Spring Boot 3.x架构分析
- 提供代码结构可视化和依赖关系分析
- 实现代码复杂度评估和质量评分

### 2. yudao-cloud集成适配
- 深度集成yudao-cloud框架核心组件
- 支持微服务架构分析和优化建议
- 兼容yudao-cloud的权限、租户、数据权限等核心功能
- 提供yudao-cloud特有的业务模式识别

### 3. 智能代码优化引擎
- 基于规则引擎的代码风格分析
- 提供性能优化建议和安全漏洞检测
- 支持代码重构建议和最佳实践推荐
- 实现自动化代码质量评估

### 4. Claude Code SubAgent集成
- 提供RESTful API接口供Claude Code调用
- 实现代码分析结果的结构化输出
- 支持实时代码分析和增量分析
- 提供丰富的查询和过滤功能

### 5. 数据存储和缓存系统
- 使用PostgreSQL存储分析结果和配置数据
- Redis缓存热点数据提升查询性能
- 可选ElasticSearch支持全文检索
- 实现数据持久化和版本管理

### 6. 监控和运维功能
- Spring Boot Actuator健康检查
- 提供系统监控和性能指标
- 支持日志记录和错误追踪
- 实现优雅关闭和故障恢复

## 技术架构要求

### 后端技术栈
- Java 17 + Spring Boot 3.1.5
- JavaParser 3.25.6用于AST分析
- Spring Data JPA + PostgreSQL数据持久化
- Redis缓存和会话管理
- Maven构建工具

### 代码质量保证
- JUnit 5 + Testcontainers测试框架
- Jacoco代码覆盖率检测(≥80%)
- CheckStyle代码规范检查
- PMD静态代码分析
- SpotBugs安全漏洞检测
- OWASP依赖安全扫描

### API设计标准
- RESTful API设计规范
- OpenAPI 3.0文档规范
- JSON数据格式标准化
- 统一错误处理和响应格式

### 性能和可扩展性
- 支持并发处理和异步分析
- 数据库连接池优化
- 缓存策略和命中率优化
- 水平扩展和负载均衡支持

## 核心业务流程

### 代码分析流程
1. 接收代码分析请求(文件路径、项目路径)
2. 使用JavaParser解析Java源码生成AST
3. 执行多维度代码分析(结构、风格、性能、安全)
4. 应用yudao-cloud特有的业务规则分析
5. 生成分析报告和优化建议
6. 缓存分析结果和更新数据库
7. 返回结构化分析结果给Claude Code

### 增量分析优化
1. 检测代码变更和版本差异
2. 只分析变更的文件和相关依赖
3. 更新缓存和增量更新数据库
4. 提供变更影响分析报告

### 实时查询服务
1. 提供多种查询维度(文件、包、类、方法)
2. 支持复杂过滤条件和排序
3. 实现分页查询和结果聚合
4. 提供统计和趋势分析

## 交付要求

### 功能完整性
- 完整实现所有核心功能模块
- 通过单元测试和集成测试验证
- 提供完整的API文档和使用示例
- 支持本地开发和生产部署

### 代码质量标准
- 单元测试覆盖率≥80%
- 所有代码质量检查工具通过
- 遵循Java编码规范和最佳实践
- 提供详细的代码注释和文档

### 性能指标要求
- 单文件分析响应时间<2秒
- 支持100个并发分析请求
- 缓存命中率≥90%
- 内存使用<2GB (处理1000个Java文件)

### 部署和运维
- 提供Docker容器化部署
- 支持多环境配置(dev/test/prod)
- 实现健康检查和监控告警
- 提供数据备份和恢复方案

## 验收标准

### 功能验收
- 能够成功分析yudao-cloud项目代码
- 生成准确的代码结构和依赖关系图
- 提供有价值的优化建议和质量评分
- Claude Code能够正常调用所有API接口

### 性能验收
- 分析yudao-cloud完整项目(约5000个Java文件)在30分钟内完成
- API响应时间P95<1秒，P99<2秒
- 系统稳定运行24小时无内存泄漏
- 支持10个并发用户同时使用

### 质量验收
- 所有自动化测试通过
- 代码覆盖率达到80%以上
- 安全扫描无高危漏洞
- 性能测试满足指标要求

## 项目里程碑

### 阶段1: 基础架构搭建 (Week 1-2)
- 项目初始化和依赖管理
- 基础Spring Boot应用搭建
- 数据库设计和JPA实体建模
- 基础API框架和错误处理

### 阶段2: AST分析核心功能 (Week 3-4)  
- JavaParser集成和AST解析
- 代码结构分析算法实现
- 基础分析规则引擎开发
- 缓存策略和数据存储实现

### 阶段3: yudao-cloud集成优化 (Week 5-6)
- yudao-cloud特有模式识别
- 业务规则引擎扩展
- 框架适配和兼容性测试
- 性能优化和并发处理

### 阶段4: API完善和集成测试 (Week 7-8)
- RESTful API完整实现
- Claude Code集成测试
- 系统集成和端到端测试
- 性能测试和优化调整

### 阶段5: 部署和验收 (Week 9-10)
- 生产环境部署和配置
- 监控和运维功能完善
- 用户验收测试和问题修复
- 文档完善和项目交付

## 风险和约束

### 技术风险
- JavaParser版本兼容性问题
- 大型项目分析性能瓶颈
- yudao-cloud框架深度集成复杂性
- 并发处理和内存管理挑战

### 项目约束
- 必须兼容Java 17和Spring Boot 3.x
- 需要保持与yudao-cloud框架的兼容性
- API设计需要满足Claude Code调用需求
- 部署环境资源限制(内存、CPU、存储)

### 缓解策略
- 建立分阶段的技术验证和原型开发
- 实施持续集成和自动化测试
- 定期进行性能测试和优化
- 建立技术文档和知识分享机制